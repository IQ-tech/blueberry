version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 10
  pre_build:
    commands:
      - echo Assuming role...
      - ASSUME_ROLE_RESULT=$(aws sts assume-role --role-arn "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${DEPLOY_ROLE}" --role-session-name "${DEPLOY_ROLE}-profile")
      - AWS_ACCESS_KEY_ID=$(echo "$ASSUME_ROLE_RESULT" | jq -r .Credentials.AccessKeyId)
      - AWS_SECRET_ACCESS_KEY=$(echo "$ASSUME_ROLE_RESULT" | jq -r .Credentials.SecretAccessKey)
      - AWS_SESSION_TOKEN=$(echo "$ASSUME_ROLE_RESULT" | jq -r .Credentials.SessionToken)
  build:
    commands:
      - yarn install --frozen-lockfile
      - yarn build-storybook

      - >
        aws s3 sync build "$S3_URI"
        --region "$AWS_DEFAULT_REGION"
        --acl public-read
        --exclude '*.gitkeep'
        --exclude '*.html'
        --cache-control 'max-age=3888000'
        --delete
      - >
        aws s3 sync build "$S3_URI"
        --region "$AWS_DEFAULT_REGION"
        --acl public-read
        --exclude '*'
        --include '*.html'
        --cache-control 'no-cache, no-store'
        --delete
      - >
        aws cloudfront create-invalidation
        --region "$AWS_DEFAULT_REGION"
        --distribution-id "$CLOUDFRONT_DISTRIBUTION_ID"
        --paths "$CLOUDFRONT_INVALIDATE_PATHS"
cache:
  paths:
    - "/usr/local/share/.cache/**/*"
